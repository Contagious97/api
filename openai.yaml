openapi: 3.0.1
info:
  title: My API
  version: '1.0'
  description: Handles data on the server for...
  termsOfService: https://www.example.com/tos
  contact:
    email: support@example.com
    name: Contact
    url: https://www.example.com/contact
  license:
    name: License
    url: https://www.example.com/license
servers:
  - url: https://my-json-server.typicode.com/contagious97/api
    variables: {}
    description: User api @ github
  - url: http://localhost:3000
    variables: {}
    description: Local mock API
paths:
  /users:
    summary: User level operations
    description: Create and read users
    get:
      summary: Fetch users from the server
      description: Returns users from server
      operationId: fetchUsers
      responses:
        2XX:
          $ref: '#/components/responses/UserArrayResponseBody'
        default:
          description: Default error sample response
      tags:
        - Users
    post:
      summary: Create a new user
      description: Store user on server
      operationId: createUser
      requestBody:
        $ref: '#/components/requestBodies/UserPostBody'
      responses:
        201:
          $ref: '#/components/responses/UserResponseBody'
        default:
          description: Default error sample response
      tags:
        - Users
  /attempts:
    summary: 'Fetch attempts '
    description: Fetch attempts
    get:
      summary: Fetches attempts from server
      description: Returns attempts from server
      operationId: fetchAttempts
      responses:
        default:
          description: Default error sample response
      tags:
        - Attempts
components:
  responses:
    UserResponseBody:
      description: success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FullUser'
    UserArrayResponseBody:
      description: user array response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserArray'
  requestBodies:
    UserPostBody:
      description: 'new user request'
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostNewUser'
  schemas:
    UserArray:
      type: array
      items:
        $ref: '#/components/schemas/FullUser'
    PostNewUser:
      type: object
      properties:
        username:
          type: string
          example: momo97
        score:
          type: integer
          example: 55
        active:
          type: boolean
          example: false
    FullUser:
      allOf:
        - $ref: '#/components/schemas/PostNewUser'
        - type: object
          properties:
            id:
              type: string
              example: 1234abc
            
